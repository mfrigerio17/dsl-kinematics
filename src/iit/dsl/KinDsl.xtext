grammar iit.dsl.KinDsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate kinDsl "dsl.iit/KinDsl"

Robot:
    base = RobotBase
	links  += Link+
	joints += Joint+;

AbstractLink:
    Link | RobotBase;

RobotBase:
    FixedRobotBase | FloatingRobotBase;

FixedRobotBase:
    'RobotBase' name=ID
    '{'
    //mass = LinkMass // if the base is fixed mass does not matter, does it?
    successors = SuccessorsList
    refFrame = RefFrame
    '}';

/* For a floating base it does not make sense to specify the transform for
   its reference frame, so the 'refFrame' property is omitted.
*/
FloatingRobotBase:
    'RobotBase' name=ID 'floating'
   '{'
    mass = LinkMass
    successors = SuccessorsList
    '}';

Link:
    'link' name=ID '{'
    mass = LinkMass
    successors = SuccessorsList
    refFrame = RefFrame
    '}';

LinkMass:
    'mass' '=' value=FLOAT;

Joint:
    RevoluteJoint | PrismaticJoint;

RevoluteJoint:
    'r_joint' name=ID '{'
    refFrame = RefFrame
    '}';

PrismaticJoint:
    'p_joint' name=ID '{'
    refFrame = RefFrame
    '}';

SuccessorsList:
    'successors' '{'
      (successors += SuccessorSpec)*
    '}';

SuccessorSpec :
    link=[Link] 'via' joint=[Joint];

/* A reference frame basically exists in terms of the roto-translation
   with respect to some other frame.
*/
RefFrame:
    'ref_frame' '{'
    'translation' ':' translation = Translation
    'rotation' ':' rotation = Rotation
    '}';

Translation:
    Vector3;
Rotation:
    Vector3;
    
    
Vector3:
    '('FLOAT','FLOAT','FLOAT')';

terminal FLOAT returns ecore::EFloat : ('+'?|'-')('0'..'9')*'.'('0'..'9')+;
//TODO add terminals for the link and joint IDs (numbering scheme)